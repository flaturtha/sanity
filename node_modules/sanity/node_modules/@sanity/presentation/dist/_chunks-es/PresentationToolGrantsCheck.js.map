{"version":3,"file":"PresentationToolGrantsCheck.js","sources":["../../../visual-editing-helpers/dist/_chunks-es/transformSanityNodeData.js","../../../visual-editing-helpers/dist/index.js","../../src/lib/debounce.ts","../../src/overlays/SharedStateProvider.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/components/ErrorCard.tsx","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/usePreviewState.ts","../../src/editor/ContentEditor.tsx","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/v4.js","../../src/panels/usePanelId.ts","../../src/panels/PanelResizer.tsx","../../src/PresentationContent.tsx","../../src/PresentationNavigateProvider.tsx","../../src/useLocalState.ts","../../src/PresentationNavigator.tsx","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/preview/IFrame.tsx","../../src/preview/OpenPreviewButton.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/SharePreviewMenu.tsx","../../src/preview/PreviewHeader.tsx","../../src/preview/Preview.tsx","../../src/util/useEffectOnChange.ts","../../src/RevisionSwitcher.tsx","../../src/useDocumentsOnPage.ts","../../src/useMainDocument.ts","../../src/lib/parse.ts","../../src/useParams.ts","../../src/usePopups.ts","../../src/usePreviewUrl.ts","../../src/useStatus.ts","../../src/PresentationTool.tsx","../../src/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import { getPublishedId, studioPath } from \"@sanity/client/csm\";\nimport { pipe, string, minLength, optional, object, record, unknown, is, safeParse, parse } from \"valibot\";\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null && !Array.isArray(value);\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction pathToUrlString(path) {\n  let str = \"\";\n  for (const segment of path) {\n    if (typeof segment == \"string\") {\n      str && (str += \".\"), str += segment;\n      continue;\n    }\n    if (typeof segment == \"number\") {\n      str && (str += \":\"), str += `${segment}`;\n      continue;\n    }\n    if (isArray(segment)) {\n      str && (str += \":\"), str += `${segment.join(\",\")}}`;\n      continue;\n    }\n    if (segment._key) {\n      str && (str += \":\"), str += `${segment._key}`;\n      continue;\n    }\n  }\n  return str;\n}\nconst RE_SEGMENT_WITH_INDEX = /^([\\w-]+):(0|[1-9][0-9]*)$/, RE_SEGMENT_WITH_TUPLE = /^([\\w-]+):([0-9]+),([0-9]+)$/, RE_SEGMENT_WITH_KEY = /^([\\w-]+):([\\w-]+)$/;\nfunction urlStringToPath(str) {\n  const path = [];\n  for (const segment of str.split(\".\")) {\n    const withIndex = RE_SEGMENT_WITH_INDEX.exec(segment);\n    if (withIndex) {\n      path.push(withIndex[1], Number(withIndex[2]));\n      continue;\n    }\n    const withTuple = RE_SEGMENT_WITH_TUPLE.exec(segment);\n    if (withTuple) {\n      path.push(withTuple[1], [Number(withTuple[2]), Number(withTuple[3])]);\n      continue;\n    }\n    const withKey = RE_SEGMENT_WITH_KEY.exec(segment);\n    if (withKey) {\n      path.push(withKey[1], { _key: withKey[2] });\n      continue;\n    }\n    path.push(segment);\n  }\n  return path;\n}\nconst DRAFTS_PREFIX = \"drafts.\", lengthyStr = pipe(string(), minLength(1)), optionalLengthyStr = optional(lengthyStr), sanityNodeSchema = object({\n  baseUrl: lengthyStr,\n  dataset: optionalLengthyStr,\n  id: lengthyStr,\n  path: lengthyStr,\n  projectId: optionalLengthyStr,\n  tool: optionalLengthyStr,\n  type: optionalLengthyStr,\n  workspace: optionalLengthyStr,\n  isDraft: optional(string())\n}), sanityLegacyNodeSchema = object({\n  origin: lengthyStr,\n  href: lengthyStr,\n  data: optional(record(string(), unknown()))\n});\nfunction isValidSanityNode(node) {\n  return is(sanityNodeSchema, node);\n}\nfunction isValidSanityLegacyNode(node) {\n  return is(sanityLegacyNodeSchema, node);\n}\nfunction encodeSanityNodeData(node) {\n  const { id: _id, path, baseUrl, tool, workspace, type } = node;\n  return isValidSanityNode(node) ? [\n    [\"id\", getPublishedId(_id)],\n    [\"type\", type],\n    [\"path\", pathToUrlString(studioPath.fromString(path))],\n    [\"base\", encodeURIComponent(baseUrl)],\n    [\"workspace\", workspace],\n    [\"tool\", tool],\n    [\"isDraft\", _id.startsWith(DRAFTS_PREFIX)]\n  ].filter(([, value]) => !!value).map((part) => {\n    const [key, value] = part;\n    return value === !0 ? key : part.join(\"=\");\n  }).join(\";\") : void 0;\n}\nfunction decodeSanityString(str) {\n  const data = str.split(\";\").reduce((acc, segment) => {\n    const [key, value] = segment.split(\"=\");\n    if (!key || segment.includes(\"=\") && !value) return acc;\n    switch (key) {\n      case \"id\":\n        acc.id = value;\n        break;\n      case \"type\":\n        acc.type = value;\n        break;\n      case \"path\":\n        acc.path = studioPath.toString(urlStringToPath(value));\n        break;\n      case \"base\":\n        acc.baseUrl = decodeURIComponent(value);\n        break;\n      case \"tool\":\n        acc.tool = value;\n        break;\n      case \"workspace\":\n        acc.workspace = value;\n        break;\n      case \"projectId\":\n        acc.projectId = value;\n        break;\n      case \"dataset\":\n        acc.dataset = value;\n        break;\n      case \"isDraft\":\n        acc.isDraft = \"\";\n        break;\n    }\n    return acc;\n  }, {});\n  if (isValidSanityNode(data))\n    return data;\n}\nfunction decodeSanityObject(data) {\n  const sanityNode = safeParse(sanityNodeSchema, data);\n  if (sanityNode.success)\n    return sanityNode.output;\n  const sanityLegacyNode = safeParse(sanityLegacyNodeSchema, data);\n  if (sanityLegacyNode.success)\n    try {\n      const url = new URL(\n        sanityLegacyNode.output.href,\n        typeof document > \"u\" ? \"https://example.com\" : location.origin\n      );\n      return url.searchParams.size > 0 ? parse(sanityNodeSchema, Object.fromEntries(url.searchParams.entries())) : sanityLegacyNode.output;\n    } catch (err) {\n      return console.error(\"Failed to parse sanity node\", err), sanityLegacyNode.output;\n    }\n}\nfunction decodeSanityNodeData(data) {\n  if (typeof data == \"object\" && data !== null)\n    return decodeSanityObject(data);\n  try {\n    const obj = JSON.parse(data);\n    return decodeSanityObject(obj);\n  } catch {\n    return decodeSanityString(data);\n  }\n}\nexport {\n  DRAFTS_PREFIX,\n  decodeSanityNodeData,\n  decodeSanityString,\n  encodeSanityNodeData,\n  isArray,\n  isRecord,\n  isValidSanityLegacyNode,\n  isValidSanityNode,\n  pathToUrlString,\n  urlStringToPath\n};\n//# sourceMappingURL=transformSanityNodeData.js.map\n","import { createListenLogic, createRequestMachine, DOMAIN, MSG_HANDSHAKE_SYN, MSG_HANDSHAKE_SYN_ACK, MSG_HANDSHAKE_ACK, MSG_RESPONSE, MSG_HEARTBEAT, MSG_DISCONNECT } from \"@sanity/comlink\";\nimport { MSG_RESPONSE as MSG_RESPONSE2 } from \"@sanity/comlink\";\nimport { studioPath } from \"@sanity/client/csm\";\nimport { encodeSanityNodeData } from \"./_chunks-es/transformSanityNodeData.js\";\nimport { pathToUrlString, urlStringToPath } from \"./_chunks-es/transformSanityNodeData.js\";\nconst channelsToComlinkMap = {\n  \"handshake/syn\": MSG_HANDSHAKE_SYN,\n  \"handshake/syn-ack\": MSG_HANDSHAKE_SYN_ACK,\n  \"handshake/ack\": MSG_HANDSHAKE_ACK,\n  \"channel/response\": MSG_RESPONSE,\n  \"channel/heartbeat\": MSG_HEARTBEAT,\n  \"channel/disconnect\": MSG_DISCONNECT,\n  \"overlay/focus\": \"visual-editing/focus\",\n  \"overlay/navigate\": \"visual-editing/navigate\",\n  \"overlay/toggle\": \"visual-editing/toggle\",\n  \"presentation/toggleOverlay\": \"presentation/toggle-overlay\"\n}, comlinkToChannelsMap = {\n  [MSG_HANDSHAKE_SYN]: \"handshake/syn\",\n  [MSG_HANDSHAKE_SYN_ACK]: \"handshake/syn-ack\",\n  [MSG_HANDSHAKE_ACK]: \"handshake/ack\",\n  [MSG_RESPONSE]: \"channel/response\",\n  [MSG_HEARTBEAT]: \"channel/heartbeat\",\n  [MSG_DISCONNECT]: \"channel/disconnect\",\n  \"visual-editing/focus\": \"overlay/focus\",\n  \"visual-editing/navigate\": \"overlay/navigate\",\n  \"visual-editing/toggle\": \"overlay/toggle\",\n  \"presentation/toggle-overlay\": \"presentation/toggleOverlay\"\n}, convertToComlinkEvent = (event) => {\n  const { data } = event;\n  return data && typeof data == \"object\" && \"domain\" in data && \"type\" in data && \"from\" in data && \"to\" in data && (data.domain === \"sanity/channels\" && (data.domain = DOMAIN), data.to === \"overlays\" && (data.to = \"visual-editing\"), data.from === \"overlays\" && (data.from = \"visual-editing\"), data.type = channelsToComlinkMap[data.type] ?? data.type), event;\n}, convertToChannelsMessage = (message) => (message.domain === DOMAIN && (message.domain = \"sanity/channels\"), message.to === \"visual-editing\" && (message.to = \"overlays\"), message.from === \"visual-editing\" && (message.from = \"overlays\"), message.type = comlinkToChannelsMap[message.type] ?? message.type, message.type === \"channel/response\" && message.responseTo && !message.data && (message.data = { responseTo: message.responseTo }), (message.type === \"handshake/syn\" || message.type === \"handshake/syn-ack\" || message.type === \"handshake/ack\") && (message.data = { id: message.connectionId }), message), sendAsChannelsMessage = ({ context }, params) => {\n  const { sources, targetOrigin } = context, message = convertToChannelsMessage(params.message);\n  sources.forEach((source) => {\n    source.postMessage(message, { targetOrigin });\n  });\n}, createCompatibilityActors = () => ({\n  listen: createListenLogic(convertToComlinkEvent),\n  requestMachine: createRequestMachine().provide({\n    actions: {\n      \"send message\": sendAsChannelsMessage\n    }\n  })\n});\nfunction createDataAttribute(props) {\n  function normalizePath(path) {\n    return path ? typeof path == \"string\" ? studioPath.fromString(path) : path : [];\n  }\n  function toString(props2) {\n    if (!props2.id) throw new Error(\"`id` is required to create a data attribute\");\n    if (!props2.type) throw new Error(\"`type` is required to create a data attribute\");\n    if (!props2.path || !props2.path.length)\n      throw new Error(\"`path` is required to create a data attribute\");\n    const attrs = {\n      baseUrl: props2.baseUrl || \"/\",\n      workspace: props2.workspace,\n      tool: props2.tool,\n      type: props2.type,\n      id: props2.id,\n      path: typeof props2.path == \"string\" ? props2.path : studioPath.toString(props2.path)\n    };\n    return encodeSanityNodeData(attrs);\n  }\n  const DataAttribute = (path) => toString({\n    ...props,\n    path: [...normalizePath(props.path), ...normalizePath(path)]\n  });\n  return DataAttribute.toString = function() {\n    return toString(props);\n  }, DataAttribute.combine = function(attrs) {\n    return createDataAttribute({\n      ...props,\n      ...attrs\n    });\n  }, DataAttribute.scope = function(path) {\n    return createDataAttribute({\n      ...props,\n      path: [...normalizePath(props.path), ...normalizePath(path)]\n    });\n  }, DataAttribute;\n}\nfunction getQueryCacheKey(query, params) {\n  return `${query}-${typeof params == \"string\" ? params : JSON.stringify(params)}`;\n}\nconst IS_MAC = typeof window < \"u\" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform), MODIFIERS = {\n  alt: \"altKey\",\n  ctrl: \"ctrlKey\",\n  mod: IS_MAC ? \"metaKey\" : \"ctrlKey\",\n  shift: \"shiftKey\"\n};\nfunction isHotkey(keys, event) {\n  return keys.every((key) => MODIFIERS[key] ? event[MODIFIERS[key]] : event.key === key.toUpperCase());\n}\nfunction isModKey(event) {\n  return event.key === (IS_MAC ? \"Meta\" : \"Ctrl\");\n}\nfunction isAltKey(event) {\n  return event.key === \"Alt\";\n}\nexport {\n  MSG_RESPONSE2 as MSG_RESPONSE,\n  createCompatibilityActors,\n  createDataAttribute,\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  isModKey,\n  pathToUrlString,\n  urlStringToPath\n};\n//# sourceMappingURL=index.js.map\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import type {Serializable, SerializableObject} from '@repo/visual-editing-helpers'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingConnection} from '../types'\nimport {SharedStateContext, type SharedStateContextValue} from './SharedStateContext'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post({type: 'presentation/shared-state', data: {key, value}})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post({type: 'presentation/shared-state', data: {key}})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<SharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return <SharedStateContext.Provider value={context}>{children}</SharedStateContext.Provider>\n}\n","import {createContext, type CSSProperties} from 'react'\nimport type {PanelElement, ResizerElement} from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {useContext, useLayoutEffect, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {useMemo} from 'react'\nimport {debounce} from '../lib/debounce'\nimport type {PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import type {ElementMap, InitialDragState, PanelElement, PanelsState, ResizerElement} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\nimport type {ElementMap, InitialDragState, PanelElement, PanelsState, ResizerElement} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import {Box, Button, Card, Container, Flex, Inline, Stack, Text, type CardProps} from '@sanity/ui'\nimport type {ReactElement, ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): ReactElement {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button fontSize={1} mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      fontSize={1}\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable no-console */\n\nimport {forwardRef, useCallback, useMemo, type PropsWithChildren, type ReactElement} from 'react'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  getPublishedId,\n  PaneRouterContext,\n  useUnique,\n  type BackLinkProps,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from '../internals'\nimport type {\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {\n    documentId,\n    documentType,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parentRefPath,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    template,\n    searchParams,\n    ...restProps\n  } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onStructureParams: (params: StructureDocumentPaneParams) => void\n    refs?: {_id: string; _type: string}[]\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>,\n): ReactElement {\n  const {children, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const {childId, ...restProps} = childLinkProps\n        const ref = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries(searchParams),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink: (backLinkProps) => <BackLink {...backLinkProps} searchParams={searchParams} />,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} searchParams={searchParams} />\n      ),\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onStructureParams({\n          ...nextParams,\n          inspect: nextParams['inspect'] ?? undefined,\n        } as StructureDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onStructureParams, refs, searchParams, structureParams])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, ErrorBoundary, Flex, Label, Stack} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState, type ErrorInfo, type ReactElement} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  getPublishedId,\n  PaneLayout,\n  DocumentListPane as StructureDocumentListPane,\n  StructureToolProvider,\n  type PaneNode,\n} from '../internals'\nimport type {\n  MainDocumentState,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): ReactElement {\n  const {mainDocumentState, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => r._id),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane index={0} itemId=\"$root\" pane={pane} paneKey=\"$root\" />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {Card, Code, ErrorBoundary, Label, Stack} from '@sanity/ui'\nimport {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type ErrorInfo,\n  type ReactElement,\n} from 'react'\nimport {useTranslation, type Path} from 'sanity'\nimport {styled} from 'styled-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  decodeJsonParams,\n  PaneLayout,\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n} from '../internals'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport type {PresentationSearchParams, StructureDocumentPaneParams} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): ReactElement {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={onFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {type ReactElement} from 'react'\nimport {type Path} from 'sanity'\nimport {StructureToolProvider} from '../internals'\nimport type {PresentationSearchParams, StructureDocumentPaneParams} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): ReactElement {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  useDocumentPreviewStore,\n  type PreviewValue,\n  type SanityDocument,\n} from '../internals'\n\ninterface PreviewState {\n  isLoading?: boolean\n  draft?: PreviewValue | Partial<SanityDocument> | null\n  published?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      '',\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo, type HTMLProps, type ReactElement} from 'react'\nimport {StateLink} from 'sanity/router'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  getPreviewValueWithFallback,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n  type Path,\n  type SanityDocument,\n} from '../internals'\nimport type {\n  MainDocumentState,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): ReactElement {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState!.document!._id,\n            type: mainDocumentState!.document!._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          value: mainDocumentState!.document! as SanityDocument,\n          published: previewState.published,\n          draft: previewState.draft,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","import {useRef} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const idRef = useRef(id || uuid())\n  return idRef.current\n}\n","import {\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport type {Path, SanityDocument} from 'sanity'\nimport {ContentEditor} from './editor/ContentEditor'\nimport {CommentsIntentProvider, type CommentIntentGetter} from './internals'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport type {\n  MainDocumentState,\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParams['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParams['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {\n  PresentationNavigateContext,\n  type PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport type {PresentationNavigate} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? {preview} : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {useEffect, useState, type Dispatch, type SetStateAction} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport type {NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {PresentationParamsContext} from './PresentationParamsContext'\nimport type {PresentationParams} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {PresentationContext, type PresentationContextValue} from './PresentationContext'\nimport type {\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParams\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, type ReactEventHandler} from 'react'\nimport {styled} from 'styled-components'\n\nconst IFrameElement = motion(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border-top: 1px solid transparent;\n  border-bottom: 0;\n  border-right: 0;\n  border-left: 0;\n  max-height: 100%;\n  width: 100%;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(function IFrame(props, ref) {\n  const {animate, initial, onLoad, preventClick, src, variants} = props\n\n  return (\n    <>\n      <IFrameElement\n        animate={animate}\n        initial={initial}\n        onLoad={onLoad}\n        ref={ref}\n        src={src}\n        variants={variants}\n      />\n      {preventClick && <IFrameOverlay />}\n    </>\n  )\n})\n","import {LaunchIcon} from '@sanity/icons'\nimport {Button, Text, Tooltip} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport type {PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      padding={2}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        fontSize={1}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        padding={2}\n        href={`${previewLocationOrigin}${previewLocationRoute}`}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n        rel=\"opener\"\n        target=\"_blank\"\n      />\n    </Tooltip>\n  )\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type ChangeEvent,\n  type FunctionComponent,\n  type KeyboardEvent,\n  type ReactNode,\n} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {useActiveWorkspace} from '../internals'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}> = function (props) {\n  const {fontSize = 1, onChange, origin, padding = 3, prefix, suffix, value} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (!absoluteValue.startsWith(origin + '/') && absoluteValue !== origin) {\n          setCustomValidity(t('preview-location-input.error', {origin, context: 'missing-origin'}))\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (!origin && (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue, t],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type {SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport type {PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: string\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion(Spinner)\nconst MotionText = motion(Text)\nconst MotionMonogram = motion(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret ? setSecretSearchParams(initialUrl, secret, previewLocationRoute, perspective) : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          fontSize={1}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          padding={2}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    padding={1}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                fontSize={1}\n                padding={3}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        animate: true,\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  DesktopIcon,\n  EditIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Hotkeys,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  type ButtonTone,\n} from '@sanity/ui'\nimport {\n  createElement,\n  useCallback,\n  useMemo,\n  type ComponentType,\n  type FunctionComponent,\n  type ReactNode,\n  type RefObject,\n} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {ACTION_IFRAME_RELOAD} from '../reducers/presentationReducer'\nimport type {HeaderOptions, PresentationPerspective} from '../types'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport type {PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\nconst PERSPECTIVE_TITLE_KEY: Record<PresentationPerspective, string> = {\n  previewDrafts: 'preview-frame.perspective.previewDrafts.title',\n  published: 'preview-frame.perspective.published.title',\n}\n\nconst PERSPECTIVE_TONES: Record<PresentationPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n}\n\nconst PERSPECTIVE_ICONS: Record<PresentationPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n}\n\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement>\n  renderDefault: (props: PreviewHeaderProps) => ReactNode\n}\n\nconst PreviewHeaderDefault: FunctionComponent<Omit<PreviewHeaderProps, 'renderDefault'>> = (\n  props,\n) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    dispatch,\n    iframe,\n    iframeRef,\n    initialUrl,\n    loadersConnection,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    perspective,\n    previewUrl,\n    setPerspective,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    visualEditing: {overlaysEnabled},\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = useCallback(() => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      dispatch({type: ACTION_IFRAME_RELOAD})\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      iframeRef.current.src = `${targetOrigin}${previewUrl || '/'}`\n    })\n  }, [dispatch, onRefresh, previewUrl, targetOrigin, iframeRef])\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  return (\n    <>\n      {toggleNavigator && (\n        <Box flex=\"none\" marginRight={1} padding={1}>\n          <Tooltip\n            animate\n            content={<Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>}\n            fallbackPlacements={['bottom-start']}\n            padding={2}\n            placement=\"bottom\"\n            portal\n          >\n            <Button\n              aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n              fontSize={1}\n              icon={PanelLeftIcon}\n              mode=\"bleed\"\n              onClick={toggleNavigator}\n              padding={2}\n              selected={navigatorEnabled}\n            />\n          </Tooltip>\n        </Box>\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        padding={1}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          marginRight={1}\n          padding={3}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={iframe.status === 'loading' || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1} marginX={1}>\n        <PreviewLocationInput\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {iframe.status === 'loaded'\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {context: iframe.status})}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  fontSize={1}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={iframe.status === 'reloading' || iframe.status === 'refreshing'}\n                  onClick={handleRefresh}\n                  padding={2}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          origin={previewLocationOrigin}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1} padding={1}>\n        <MenuButton\n          button={\n            <Button\n              fontSize={1}\n              iconRight={ChevronDownIcon}\n              mode=\"bleed\"\n              padding={2}\n              space={2}\n              text={t(\n                PERSPECTIVE_TITLE_KEY[\n                  loadersConnection === 'connected' ? perspective : 'previewDrafts'\n                ],\n              )}\n              loading={loadersConnection === 'reconnecting' && iframe.status !== 'loaded'}\n              disabled={loadersConnection !== 'connected'}\n            />\n          }\n          id=\"perspective-menu\"\n          menu={\n            <Menu style={{maxWidth: 240}}>\n              <MenuItem\n                fontSize={1}\n                onClick={() => setPerspective('previewDrafts')}\n                padding={3}\n                pressed={perspective === 'previewDrafts'}\n                tone={PERSPECTIVE_TONES.previewDrafts}\n              >\n                <Flex align=\"flex-start\" gap={3}>\n                  <Box flex=\"none\">\n                    <Text size={1}>{createElement(PERSPECTIVE_ICONS.previewDrafts)}</Text>\n                  </Box>\n                  <Stack flex={1} space={2}>\n                    <Text size={1} weight=\"medium\">\n                      {t(PERSPECTIVE_TITLE_KEY['previewDrafts'])}\n                    </Text>\n                    <Text muted size={1}>\n                      {t('preview-frame.perspective.previewDrafts.text')}\n                    </Text>\n                  </Stack>\n                  <Box flex=\"none\">\n                    <Text\n                      muted\n                      size={1}\n                      style={{\n                        opacity: perspective === 'previewDrafts' ? 1 : 0,\n                      }}\n                    >\n                      <CheckmarkIcon />\n                    </Text>\n                  </Box>\n                </Flex>\n              </MenuItem>\n              <MenuItem\n                fontSize={1}\n                onClick={() => setPerspective('published')}\n                padding={3}\n                pressed={perspective === 'published'}\n                tone={PERSPECTIVE_TONES.published}\n              >\n                <Flex align=\"flex-start\" gap={3}>\n                  <Box flex=\"none\">\n                    <Text size={1}>{createElement(PERSPECTIVE_ICONS.published)}</Text>\n                  </Box>\n                  <Stack flex={1} space={2}>\n                    <Text size={1} weight=\"medium\">\n                      {t(PERSPECTIVE_TITLE_KEY['published'])}\n                    </Text>\n                    <Text muted size={1}>\n                      {t('preview-frame.perspective.published.text')}\n                    </Text>\n                  </Stack>\n                  <Box flex=\"none\">\n                    <Text\n                      muted\n                      size={1}\n                      style={{\n                        opacity: perspective === 'published' ? 1 : 0,\n                      }}\n                    >\n                      <CheckmarkIcon />\n                    </Text>\n                  </Box>\n                </Flex>\n              </MenuItem>\n            </Menu>\n          }\n          popover={{\n            animate: true,\n            constrainSize: true,\n            placement: 'bottom',\n            portal: true,\n          }}\n        />\n      </Flex>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          padding={2}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            fontSize={1}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            padding={2}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1} paddingX={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </>\n  )\n}\n\nconst PreviewHeader: FunctionComponent<\n  Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions}\n> = (props) => {\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return createElement(PreviewHeaderDefault, props)\n  }, [])\n\n  const header = props.options?.component\n    ? createElement(props.options.component, {...props, renderDefault})\n    : renderDefault(props)\n\n  return (\n    <Card flex=\"none\" padding={2} shadow={1} style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n\n/** @internal */\nexport function usePresentationPreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): () => ReactNode {\n  const Component = useCallback(() => {\n    return <PreviewHeader {...props} />\n  }, [props])\n\n  return Component\n}\n","import type {Status} from '@sanity/comlink'\nimport {\n  Button,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n} from '@sanity/ui'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {useTranslation} from 'sanity'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_RELOAD,\n  type DispatchPresentationAction,\n  type PresentationState,\n} from '../reducers/presentationReducer'\nimport type {HeaderOptions, PresentationPerspective, PresentationViewport} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {IFrame} from './IFrame'\nimport {usePresentationPreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion(Flex)\n\nexport interface PreviewProps extends Pick<PresentationState, 'iframe' | 'visualEditing'> {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  dispatch: DispatchPresentationAction\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: Status\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: Status\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setPerspective: (perspective: 'previewDrafts' | 'published') => void\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {dispatch, iframe, header, initialUrl, loadersConnection, overlaysConnection, viewport} =\n      props\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const PreviewHeader = usePresentationPreviewHeader({\n      ...props,\n      iframeRef: ref,\n      options: header,\n    })\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const loading = iframe.status === 'loading' || iframe.status === 'reloading'\n    const [timedOut, setTimedOut] = useState(false)\n    const refreshing = iframe.status === 'refreshing'\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = loading || refreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = initialUrl.toString()\n\n      dispatch({type: ACTION_IFRAME_RELOAD})\n    }, [dispatch, initialUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [overlaysConnection, loading, refreshing])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'disconnected') {\n        setSomethingIsWrong(true)\n      }\n      return\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    }, [dispatch])\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n    useEffect(() => {\n      if (!ref.current) {\n        return\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (loading || (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n        !continueAnyway\n      )\n    }, [continueAnyway, iframe.status, loading, overlaysConnection])\n\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        loading ? 'reloading' : 'idle',\n        viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [continueAnyway, loading, preventIframeInteraction, showOverlaysConnectionStatus, viewport])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider delay={1000}>\n          <PreviewHeader />\n\n          {/* @TODO: Move this to <PreviewFrame /> */}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={viewport === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          fontSize={1}\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          fontSize={1}\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading ||\n                    (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                      borderTop: '1px solid transparent',\n                      boxShadow: '0 0 0 1px var(--card-border-color)',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={initialUrl.toString()}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","import {useCallback, useEffect, useRef, type DependencyList} from 'react'\n\n/**\n * Similar to `useEffect`, but only execute the callback on value change.\n * @param value - The value to watch for changes.\n * @param callback - The callback to execute when the value changes.\n * @param dependencies - The callback dependencies.\n * @param initialValue - An optional initial value to compare against.\n * @param comparator - An optional comparator function for determining changes, useful if the value is non-primitive. Should return true if the callback should be executed.\n * @internal\n */\nexport function useEffectOnChange<T>(\n  value: T,\n  callback: (value: T, prevValue: T | undefined) => void | (() => void),\n  dependencies: DependencyList,\n  initialValue?: T,\n  comparator?: (a: T, b?: T) => boolean | undefined,\n): void {\n  const previousValueRef = useRef<T | undefined>(initialValue)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const _callback = useCallback(callback, dependencies)\n\n  useEffect(() => {\n    const prev = previousValueRef.current\n    previousValueRef.current = value\n    if (comparator ? comparator(value, prev) : value !== prev) {\n      return _callback(value, prev)\n    }\n  }, [_callback, comparator, value])\n}\n","import {type FunctionComponent} from 'react'\nimport {useEditState} from './internals'\nimport type {PresentationNavigate} from './types'\nimport {useEffectOnChange} from './util/useEffectOnChange'\n\ninterface RevisionSwitcherProps {\n  documentId: string\n  documentRevision: string | undefined\n  documentType: string\n  navigate: PresentationNavigate\n  perspective: 'previewDrafts' | 'published'\n}\n\n/**\n * Renderless component to handle displaying the correct revision when the\n * perspective is switched. When the perspective changes to 'published', the\n * `rev` parameter correpsonding to the published document is resolved from the\n * published edit state. When the perspective changes to 'previewDrafts', the\n * `rev` parameter is removed, as the latest draft should be displayed.\n * @internal\n */\nexport const RevisionSwitcher: FunctionComponent<RevisionSwitcherProps> = function (props) {\n  const {documentId, documentType, navigate, perspective, documentRevision} = props\n\n  const editState = useEditState(documentId, documentType)\n\n  useEffectOnChange(\n    perspective,\n    (value) => {\n      let rev: string | undefined = undefined\n      if (value === 'published' && editState.published) {\n        const {_updatedAt, _rev} = editState.published\n        rev = `${_updatedAt}/${_rev}`\n      }\n      if (documentRevision !== rev) {\n        navigate({}, {rev}, true)\n      }\n    },\n    [editState, navigate, documentRevision],\n  )\n\n  return null\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {useCallback, useMemo, useRef, useState, type MutableRefObject} from 'react'\nimport type {FrameState, PresentationPerspective} from './types'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nlet warnedAboutCrossDatasetReference = false\n\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  if (perspective !== 'published' && perspective !== 'previewDrafts') {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    (key: string, perspective: ClientPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // eslint-disable-next-line no-warning-comments\n          // @TODO Handle cross dataset references\n          if (!warnedAboutCrossDatasetReference) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              'Cross dataset references are not supported yet, ignoring source document',\n              sourceDocument,\n            )\n            warnedAboutCrossDatasetReference = true\n          }\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import type {ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {useClient} from 'sanity'\nimport {useRouter, type RouterState} from 'sanity/router'\nimport {API_VERSION} from './constants'\nimport type {\n  DocumentResolver,\n  DocumentResolverContext,\n  MainDocument,\n  MainDocumentState,\n  PresentationNavigate,\n  PreviewUrlOption,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter ? `*[${filter}][0]{_id, _type}` : undefined\n  }\n\n  if ('type' in resolver) {\n    return `*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin'] = undefined\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  previewUrl?: PreviewUrlOption\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, previewUrl, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const client = useClient({apiVersion: API_VERSION})\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const url = useMemo(() => {\n    const relativeUrl =\n      path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n    const base =\n      typeof previewUrl === 'string'\n        ? previewUrl\n        : typeof previewUrl === 'object'\n          ? previewUrl?.origin || location.origin\n          : location.origin\n\n    return new URL(relativeUrl, base)\n  }, [path, previewUrl, routerState._searchParams])\n\n  const clearState = useCallback(() => {\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n  }, [])\n\n  useEffect(() => {\n    if (resolvers.length && url) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: 'previewDrafts',\n            signal: controller.signal,\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => {\n              if (!doc || mainDocumentIdRef.current !== doc._id) {\n                setMainDocumentState({\n                  document: doc,\n                  path: url.pathname,\n                })\n                mainDocumentIdRef.current = doc?._id\n\n                // We only want to force a navigation to the main document if\n                // the path changed but the document ID did not. An explicit\n                // document navigation should take precedence over displaying\n                // the main document. We determine if an explicit document\n                // navigation has occured by comparing the IDs of the last two\n                // resultant navigation states.\n                if (navigationHistory.at(-1)?.['id'] === navigationHistory.at(-2)?.['id']) {\n                  navigate?.({\n                    id: doc?._id,\n                    type: doc?._type,\n                  })\n                }\n              }\n            })\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    clearState()\n    return undefined\n  }, [client, clearState, navigate, navigationHistory, resolvers, url])\n\n  return mainDocumentState\n}\n","import {urlStringToPath} from '@repo/visual-editing-helpers'\nimport {studioPath} from '@sanity/client/csm'\nimport type {PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","import {useCallback, useEffect, useMemo, useRef, useState, type MutableRefObject} from 'react'\nimport type {RouterContextValue, RouterState, SearchParam} from 'sanity/router'\nimport {getPublishedId} from './internals'\nimport {parseRouterState} from './lib/parse'\nimport type {\n  CombinedSearchParams,\n  FrameState,\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  PresentationStateParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParams\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParams>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams['preview'] || `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams['perspective'],\n      viewport: routerSearchParams['viewport'],\n      inspect: routerSearchParams['inspect'],\n      rev: routerSearchParams['rev'],\n      since: routerSearchParams['since'],\n      template: routerSearchParams['template'],\n      templateParams: routerSearchParams['templateParams'],\n      view: routerSearchParams['view'],\n      // assist\n      pathKey: routerSearchParams['pathKey'],\n      instruction: routerSearchParams['instruction'],\n      // comments\n      comment: routerSearchParams['comment'],\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n    })\n    return pruned\n  }, [\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (nextState, nextSearchState = {}, forceReplace) => {\n      // Force navigation to use published IDs only\n      if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n      // Extract type, id and path as 'routerState'\n      const {_searchParams: routerSearchParams, ...routerState} = routerStateRef.current\n\n      // Convert array of search params to an object\n      const routerSearchState = (routerSearchParams || []).reduce(\n        (acc, [key, value]) => ((acc[key as keyof CombinedSearchParams] = value), acc),\n        {} as CombinedSearchParams,\n      )\n\n      // Merge routerState and incoming state\n      const state: RouterState = pruneObject({\n        ...routerState,\n        ...nextState,\n      })\n\n      // Merge routerSearchState and incoming searchState\n      const searchState = pruneObject({\n        ...routerSearchState,\n        ...nextSearchState,\n      })\n\n      // If the document has changed, clear the template and templateParams\n      if (routerState.id !== state['id']) {\n        delete searchState.template\n        delete searchState.templateParams\n      }\n\n      state._searchParams = Object.entries(searchState).reduce(\n        (acc, [key, value]) => [...acc, [key, value]],\n        [] as SearchParam[],\n      )\n\n      const replace = forceReplace ?? searchState.preview === frameStateRef.current.url\n\n      setNavigationHistory((prev) => [...prev, state])\n      routerNavigate(state, {replace})\n    },\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import type {Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n\n    return\n  }, [popups])\n\n  return {popups, open}\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {definePreviewUrl} from '@sanity/preview-url-secret/define-preview-url'\nimport {startTransition, useEffect, useMemo, useRef, useState} from 'react'\nimport {useClient, useCurrentUser, type SanityClient} from 'sanity'\nimport {suspend} from 'suspend-react'\nimport {API_VERSION} from './constants'\nimport {useActiveWorkspace} from './internals'\nimport type {PreviewUrlOption} from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  studioPreviewPerspective: 'published' | 'previewDrafts',\n  previewSearchParam: string | null,\n  canCreateUrlPreviewSecrets: boolean,\n): URL {\n  const client = useClient({apiVersion: API_VERSION})\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName, previewSearchParam)\n  const previewUrlSecret = usePreviewUrlSecret(\n    (canCreateUrlPreviewSecrets && typeof previewUrl === 'object') ||\n      typeof previewUrl === 'function',\n    deps,\n  )\n\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) || resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object' ? definePreviewUrl<SanityClient>(previewUrl) : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      studioPreviewPerspective,\n      previewSearchParam,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n  previewSearchParam: string | null,\n) {\n  // Allow busting the cache when the Presentation Tool is reloaded, without causing it to suspend on every render that changes the `preview` parameter\n  const [cachedPreviewSearchParam, setCachedPreviewSearchParam] = useState(\n    () => previewSearchParam || '',\n  )\n  const timeoutRef = useRef(0)\n  useEffect(() => {\n    if (cachedPreviewSearchParam && previewSearchParam) {\n      // Handle resets, like when the Presentation Tool is clicked in the navbar\n      window.clearTimeout(timeoutRef.current)\n      return () => {\n        timeoutRef.current = window.setTimeout(() => {\n          setCachedPreviewSearchParam('')\n        }, 100)\n      }\n    }\n    return\n  }, [cachedPreviewSearchParam, previewSearchParam])\n\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      '@sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n      cachedPreviewSearchParam,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName, cachedPreviewSearchParam],\n  )\n}\n\nfunction usePreviewUrlSecret(enabled: boolean, deps: (string | symbol | undefined)[]) {\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return\n    const timeout = setTimeout(() => {\n      startTransition(() => setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()))\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import type {Status, StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * @returns {[string, (event: StatusEvent) => void]} - An array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [string, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: Status; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const status = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'handshaking')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.channel)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected = next.get(event.channel)?.hasConnected || event.status === 'connected'\n        next.set(event.channel, {status: event.status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [status, setStatusFromEvent]\n}\n","import {\n  createCompatibilityActors,\n  isAltKey,\n  isHotkey,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport {studioPath} from '@sanity/client/csm'\nimport {\n  createChannelMachine,\n  createController,\n  type Controller,\n  type Message,\n} from '@sanity/comlink'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {\n  lazy,\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type ReactElement,\n} from 'react'\nimport {useDataset, useProjectId, type Path, type SanityDocument, type Tool} from 'sanity'\nimport {useRouter, type RouterContextValue} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  DEFAULT_TOOL_NAME,\n  EDIT_INTENT_MODE,\n  LIVE_DRAFT_EVENTS_ENABLED,\n} from './constants'\nimport {useUnique, useWorkspace, type CommentIntentGetter} from './internals'\nimport {debounce} from './lib/debounce'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_REFRESH,\n  ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n  presentationReducer,\n  presentationReducerInit,\n} from './reducers/presentationReducer'\nimport {RevisionSwitcher} from './RevisionSwitcher'\nimport type {\n  FrameState,\n  PresentationNavigate,\n  PresentationPerspective,\n  PresentationPluginOptions,\n  PresentationStateParams,\n  PresentationViewport,\n  StructureDocumentPaneParams,\n  VisualEditingConnection,\n} from './types'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {useStatus} from './useStatus'\n\nconst LoaderQueries = lazy(() => import('./loader/LoaderQueries'))\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageFeatures = lazy(() => import('./features/PostMessageFeatures'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canCreateUrlPreviewSecrets: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n}): ReactElement {\n  const {canCreateUrlPreviewSecrets, canToggleSharePreviewAccess, canUseSharedPreviewAccess, tool} =\n    props\n  const components = tool.options?.components\n  const _previewUrl = tool.options?.previewUrl\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams['perspective'] === 'published' ? 'published' : 'previewDrafts',\n    routerSearchParams['preview'] || null,\n    canCreateUrlPreviewSecrets,\n  )\n  const canSharePreviewAccess = useMemo<boolean>(() => {\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'draftMode' in _previewUrl &&\n      _previewUrl.draftMode\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn('previewUrl.draftMode is deprecated, use previewUrl.previewMode instead')\n      return _previewUrl.draftMode.shareAccess !== false\n    }\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'previewMode' in _previewUrl &&\n      _previewUrl.previewMode\n    ) {\n      return _previewUrl.previewMode.shareAccess !== false\n    }\n    return false\n  }, [_previewUrl])\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {\n    navigate: _navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  // Most navigation events should be debounced, so use this unless explicitly needed\n  const navigate = useMemo(() => debounce<PresentationNavigate>(_navigate, 50), [_navigate])\n\n  const [state, dispatch] = useReducer(presentationReducer, {}, presentationReducerInit)\n\n  const perspective = useMemo(\n    () => (params.perspective ? 'published' : 'previewDrafts'),\n    [params.perspective],\n  )\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    // Prevent flash of content by using immediate navigation\n    navigate: _navigate,\n    navigationHistory,\n    path: params.preview,\n    previewUrl: tool.options?.previewUrl,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = state.iframe.status === 'loading'\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  useEffect(() => {\n    if (!controller) return\n\n    const comlink = controller.createConnection<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createChannelMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      navigate({\n        type: data.type,\n        id: data.id,\n        path: data.path,\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title, url} = data\n      if (frameStateRef.current.url !== url) {\n        navigate({}, {preview: url})\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      dispatch({\n        type: ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n        enabled: data.enabled,\n      })\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        dispatch({type: ACTION_IFRAME_REFRESH})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, navigate, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return\n    const comlink = controller.createConnection<PreviewKitNodeMsg, Message>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createChannelMachine<PreviewKitNodeMsg, Message>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({path: studioPath.toString(nextPath)}, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (url.origin === initialPreviewUrl.origin && preview !== params.preview) {\n        navigate({}, {preview})\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (structureParams: StructureDocumentPaneParams) => {\n      navigate({}, structureParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post({\n        type: 'presentation/focus',\n        data: {id: params.id, path: params.path},\n      })\n    } else {\n      visualEditingComlink?.post({type: 'presentation/blur', data: undefined})\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        visualEditingComlink?.post({\n          type: 'presentation/navigate',\n          data: {\n            url: params.preview,\n            type: 'replace',\n          },\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post({type: 'presentation/toggle-overlay', data: undefined}),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  // Handle edge case where the `&rev=` parameter gets \"stuck\"\n  const idRef = useRef<string | undefined>(params.id)\n  useEffect(() => {\n    if (params.rev && idRef.current && params.id !== idRef.current) {\n      navigate({}, {rev: undefined})\n    }\n    idRef.current = params.id\n  })\n\n  const refreshRef = useRef<number>()\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      dispatch({type: ACTION_IFRAME_REFRESH})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post({\n          type: 'presentation/refresh',\n          data: {\n            source: 'manual',\n            livePreviewEnabled:\n              previewKitConnection === 'connected' || loadersConnection === 'connected',\n          },\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({}, {viewport}, true)\n    },\n    [navigate],\n  )\n\n  const setPerspective = useCallback(\n    (next: PresentationPerspective) => {\n      // Omit the perspective URL search param if the next perspective state is\n      // the default: 'previewDrafts'\n      const perspective = next === 'previewDrafts' ? undefined : next\n      navigate({}, {perspective})\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          dispatch={dispatch}\n                          header={unstable_header}\n                          iframe={state.iframe}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setPerspective={setPerspective}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          visualEditing={state.visualEditing}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      {controller && (\n        <Suspense>\n          {LIVE_DRAFT_EVENTS_ENABLED ? (\n            <LiveQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n            />\n          ) : (\n            <LoaderQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n              documentsOnPage={documentsOnPage}\n            />\n          )}\n        </Suspense>\n      )}\n      {visualEditingComlink && params.id && params.type && (\n        <Suspense>\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        </Suspense>\n      )}\n      {visualEditingComlink && (\n        <Suspense>\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        </Suspense>\n      )}\n      {visualEditingComlink && documentsOnPage.length > 0 && (\n        <Suspense>\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        </Suspense>\n      )}\n      {visualEditingComlink && (\n        <Suspense>\n          <PostMessageDocuments comlink={visualEditingComlink} />\n        </Suspense>\n      )}\n      {visualEditingComlink && (\n        <Suspense>\n          <PostMessageFeatures comlink={visualEditingComlink} />\n        </Suspense>\n      )}\n      {visualEditingComlink && (\n        <Suspense>\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        </Suspense>\n      )}\n      {params.id && params.type && (\n        <RevisionSwitcher\n          documentId={params.id}\n          documentRevision={params.rev}\n          documentType={params.type}\n          navigate={navigate}\n          perspective={perspective}\n        />\n      )}\n    </>\n  )\n}\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {useToast} from '@sanity/ui'\nimport {uuid} from '@sanity/uuid'\nimport {useEffect, useState, type ReactElement} from 'react'\nimport {useGrantsStore, useTranslation, type PermissionCheckResult, type Tool} from 'sanity'\nimport {presentationLocaleNamespace} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport type {PresentationPluginOptions} from './types'\n\nexport default function PresentationToolGrantsCheck(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {previewUrl} = props.tool.options ?? {}\n  const {push: pushToast} = useToast()\n  const willGeneratePreviewUrlSecret =\n    typeof previewUrl === 'object' || typeof previewUrl === 'function'\n  const grantsStore = useGrantsStore()\n  const [previewAccessSharingCreatePermission, setCreateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingUpdatePermission, setUpdateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingReadPermission, setReadAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewUrlSecretPermission, setPreviewUrlSecretPermission] =\n    useState<PermissionCheckResult | null>(null)\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret) return undefined\n\n    const previewCreateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setCreateAccessSharingPermission)\n    const previewUpdateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('update', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setUpdateAccessSharingPermission)\n    const previewReadAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('read', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setReadAccessSharingPermission)\n    const previewUrlSecretPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: `drafts.${uuid()}`, _type: schemaType})\n      .subscribe(setPreviewUrlSecretPermission)\n\n    return () => {\n      previewCreateAccessSharingPermissionSubscription.unsubscribe()\n      previewUpdateAccessSharingPermissionSubscription.unsubscribe()\n      previewReadAccessSharingPermissionSubscription.unsubscribe()\n      previewUrlSecretPermissionSubscription.unsubscribe()\n    }\n  }, [grantsStore, willGeneratePreviewUrlSecret])\n\n  const canCreateUrlPreviewSecrets = previewUrlSecretPermission?.granted\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret || canCreateUrlPreviewSecrets !== false) return undefined\n    const raf = requestAnimationFrame(() =>\n      pushToast({\n        closable: true,\n        status: 'error',\n        duration: 30_000,\n        title: t('preview-url-secret.missing-grants'),\n      }),\n    )\n    return () => cancelAnimationFrame(raf)\n  }, [canCreateUrlPreviewSecrets, pushToast, t, willGeneratePreviewUrlSecret])\n\n  if (\n    willGeneratePreviewUrlSecret &&\n    (!previewAccessSharingCreatePermission ||\n      typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n      !previewAccessSharingUpdatePermission ||\n      typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n      !previewUrlSecretPermission ||\n      !previewAccessSharingReadPermission ||\n      typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n      typeof previewUrlSecretPermission.granted === 'undefined')\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      {...props}\n      canCreateUrlPreviewSecrets={canCreateUrlPreviewSecrets === true}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n    />\n  )\n}\n"],"names":["Root","pivotPanel","index","total","widths","panels","Container","WrappedCode","StructureDocumentListPane","StructureDocumentPane","schemaType","props","uuid","document","NavigatorComponent","error","PreviewHeader","perspective","path","routerSearchParams","routerState","resolvedUrl","status","controller","structureParams"],"mappings":"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","x_google_ignoreList":[16,17,18,19]}