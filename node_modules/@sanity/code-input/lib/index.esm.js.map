{"version":3,"file":"index.esm.js","sources":["../src/createHighlightMarkers.ts","../src/config.ts","../src/ace-editor/AceEditorLazy.tsx","../src/CodeInput.tsx","../src/PreviewCode.tsx","../src/getMedia.tsx"],"sourcesContent":["import type {IMarker} from 'react-ace'\nimport {css} from 'styled-components'\n\nexport const highlightMarkersCSS = css`\n  .ace_editor_markers_highlight {\n    position: absolute;\n    background-color: ${({theme}) => theme.sanity.color.solid.primary.enabled.bg};\n    opacity: 0.2;\n    width: 100% !important;\n    border-radius: 0 !important;\n  }\n`\n\nexport default function createHighlightMarkers(rows: number[]): IMarker[] {\n  return rows.map((row) => ({\n    startRow: Number(row) - 1,\n    startCol: 0,\n    endRow: Number(row) - 1,\n    endCol: +Infinity,\n    className: 'ace_editor_markers_highlight',\n    type: 'screenLine',\n    inFront: true,\n  }))\n}\n","import {CodeInputLanguage} from './types'\n\n// NOTE: MAKE SURE THESE ALIGN WITH IMPORTS IN ./ace-editor/editorSupport\nexport const SUPPORTED_LANGUAGES: CodeInputLanguage[] = [\n  {title: 'Batch file', value: 'batchfile'},\n  {title: 'C#', value: 'csharp'},\n  {title: 'CSS', value: 'css'},\n  {title: 'Go', value: 'golang'},\n  {title: 'GROQ', value: 'groq'},\n  {title: 'HTML', value: 'html'},\n  {title: 'Java', value: 'java'},\n  {title: 'JavaScript', value: 'javascript'},\n  {title: 'JSON', value: 'json'},\n  {title: 'JSX', value: 'jsx'},\n  {title: 'Markdown', value: 'markdown'},\n  {title: 'MySQL', value: 'mysql'},\n  {title: 'PHP', value: 'php'},\n  {title: 'Plain text', value: 'text'},\n  {title: 'Python', value: 'python'},\n  {title: 'Ruby', value: 'ruby'},\n  {title: 'SASS', value: 'sass'},\n  {title: 'SCSS', value: 'scss'},\n  {title: 'sh', value: 'sh'},\n  {title: 'TSX', value: 'tsx'},\n  {title: 'TypeScript', value: 'typescript'},\n  {title: 'XML', value: 'xml'},\n  {title: 'YAML', value: 'yaml'},\n]\n\nexport const LANGUAGE_ALIASES: Record<string, string | undefined> = {js: 'javascript'}\n\nexport const SUPPORTED_THEMES = ['github', 'monokai', 'terminal', 'tomorrow']\n\nexport const DEFAULT_THEME = 'tomorrow'\nexport const DEFAULT_DARK_THEME = 'monokai'\n\nexport const ACE_SET_OPTIONS = {\n  useSoftTabs: true,\n  navigateWithinSoftTabs: true /* note only supported by ace v1.2.7 or higher */,\n}\n\nexport const ACE_EDITOR_PROPS = {$blockScrolling: true}\n\nexport const PATH_LANGUAGE = ['language']\nexport const PATH_CODE = ['code']\nexport const PATH_FILENAME = ['filename']\n","import React, {useEffect, useState} from 'react'\n\n/**\n * AceEditor loads window global directly when imported, which crashes in node envs.\n * This works around the issue by only importing ace-dependencies when window is defined.\n *\n * We only set the ace lazy component after mounting, to allow us to render null on the server,\n * and use suspense on the client. This will make hydration work correctly.\n */\nexport const AceEditorLazy = React.lazy(() => import('./editorSupport'))\n\nexport function useAceEditor() {\n  const [mounted, setMounted] = useState(false)\n  useEffect(() => {\n    requestAnimationFrame(() => setMounted(true))\n  }, [])\n\n  return mounted ? AceEditorLazy : null\n}\n","/* eslint-disable react/jsx-handler-names */\nimport React, {Suspense, useCallback, useEffect, useImperativeHandle, useMemo, useRef} from 'react'\nimport {\n  InputProps,\n  ObjectSchemaType,\n  StringInputProps,\n  useColorScheme,\n  FieldMember,\n  MemberField,\n  ObjectInputProps,\n  set,\n  setIfMissing,\n  unset,\n  RenderInputCallback,\n} from 'sanity'\nimport {Card, Select, Stack, ThemeColorSchemeKey} from '@sanity/ui'\nimport styled from 'styled-components'\nimport createHighlightMarkers, {highlightMarkersCSS} from './createHighlightMarkers'\nimport {CodeInputLanguage, CodeInputValue} from './types'\nimport {\n  ACE_EDITOR_PROPS,\n  ACE_SET_OPTIONS,\n  DEFAULT_DARK_THEME,\n  DEFAULT_THEME,\n  LANGUAGE_ALIASES,\n  PATH_CODE,\n  SUPPORTED_LANGUAGES,\n  SUPPORTED_THEMES,\n} from './config'\nimport {useAceEditor} from './ace-editor/AceEditorLazy'\n\nexport type {CodeInputLanguage, CodeInputValue} from './types'\n\nconst EditorContainer = styled(Card)`\n  position: relative;\n  box-sizing: border-box;\n  overflow: hidden;\n  z-index: 0;\n\n  .ace_editor {\n    font-family: ${({theme}) => theme.sanity.fonts.code.family};\n    font-size: ${({theme}) => theme.sanity.fonts.code.sizes[1]};\n    line-height: inherit;\n  }\n\n  ${highlightMarkersCSS}\n\n  &:not([disabled]):not([readonly]) {\n    &:focus,\n    &:focus-within {\n      box-shadow: 0 0 0 2px ${({theme}) => theme.sanity.color.base.focusRing};\n      background-color: ${({theme}) => theme.sanity.color.base.bg};\n      border-color: ${({theme}) => theme.sanity.color.base.focusRing};\n    }\n  }\n`\n\n/**\n * @public\n */\nexport interface CodeOptions {\n  theme?: string\n  darkTheme?: string\n  languageAlternatives?: CodeInputLanguage[]\n  language?: string\n  withFilename?: boolean\n}\n\n/**\n * @public\n */\nexport type CodeSchemaType = Omit<ObjectSchemaType, 'options'> & {\n  options?: CodeOptions\n}\n\n/**\n * @public\n */\nexport type CodeInputProps = ObjectInputProps<CodeInputValue, CodeSchemaType> & {\n  /** @internal */\n  colorScheme?: ThemeColorSchemeKey\n}\n\n// Returns a string with the mode name if supported (because aliases), otherwise false\nfunction isSupportedLanguage(mode: string) {\n  const alias = LANGUAGE_ALIASES[mode]\n\n  if (alias) {\n    return alias\n  }\n\n  const isSupported = SUPPORTED_LANGUAGES.find((lang) => lang.value === mode)\n  if (isSupported) {\n    return mode\n  }\n\n  return false\n}\n\nexport function CodeInput(props: CodeInputProps) {\n  const {\n    members,\n    elementProps,\n    onChange,\n    readOnly,\n    renderField,\n    renderInput,\n    renderItem,\n    renderPreview,\n    schemaType: type,\n    value,\n    onPathFocus,\n  } = props\n\n  const aceEditorRef = useRef<any>()\n\n  const fieldMembers = useMemo(\n    () => members.filter((member) => member.kind === 'field') as FieldMember[],\n    [members]\n  )\n\n  const languageFieldMember = fieldMembers.find((member) => member.name === 'language')\n  const filenameMember = fieldMembers.find((member) => member.name === 'filename')\n  const codeFieldMember = fieldMembers.find((member) => member.name === 'code')\n\n  useImperativeHandle(elementProps.ref, () => ({\n    focus: () => {\n      aceEditorRef?.current?.editor?.focus()\n    },\n  }))\n\n  const handleCodeFocus = useCallback(() => {\n    onPathFocus(PATH_CODE)\n  }, [onPathFocus])\n\n  const {scheme} = useColorScheme()\n\n  const theme = useMemo(() => {\n    const isLight = scheme === 'light'\n    const preferredTheme = isLight ? type.options?.theme : type.options?.darkTheme\n    const defaultTheme = isLight ? DEFAULT_THEME : DEFAULT_DARK_THEME\n    return preferredTheme && SUPPORTED_THEMES.find((t) => t === preferredTheme)\n      ? preferredTheme\n      : defaultTheme\n  }, [type, scheme])\n\n  const handleToggleSelectLine = useCallback(\n    (lineNumber: number) => {\n      const editorSession = aceEditorRef.current?.editor?.getSession()\n      const backgroundMarkers = editorSession?.getMarkers(true)\n      const currentHighlightedLines = Object.keys(backgroundMarkers)\n        .filter((key) => backgroundMarkers[key].type === 'screenLine')\n        .map((key) => backgroundMarkers[key].range.start.row)\n      const currentIndex = currentHighlightedLines.indexOf(lineNumber)\n      if (currentIndex > -1) {\n        // toggle remove\n        currentHighlightedLines.splice(currentIndex, 1)\n      } else {\n        // toggle add\n        currentHighlightedLines.push(lineNumber)\n        currentHighlightedLines.sort()\n      }\n      onChange(\n        set(\n          currentHighlightedLines.map(\n            (line) =>\n              // ace starts at line (row) 0, but we store it starting at line 1\n              line + 1\n          ),\n          ['highlightedLines']\n        )\n      )\n    },\n    [aceEditorRef, onChange]\n  )\n\n  const handleGutterMouseDown = useCallback(\n    (event: any) => {\n      const target = event.domEvent.target\n      if (target.classList.contains('ace_gutter-cell')) {\n        const row = event.getDocumentPosition().row\n        handleToggleSelectLine(row)\n      }\n    },\n    [handleToggleSelectLine]\n  )\n\n  useEffect(() => {\n    const editor = aceEditorRef?.current?.editor\n    return () => {\n      editor?.session?.removeListener('guttermousedown', handleGutterMouseDown)\n    }\n  }, [aceEditorRef, handleGutterMouseDown])\n\n  const handleEditorLoad = useCallback(\n    (editor: any) => {\n      editor?.on('guttermousedown', handleGutterMouseDown)\n    },\n    [handleGutterMouseDown]\n  )\n\n  const getLanguageAlternatives = useCallback((): {\n    title: string\n    value: string\n    mode?: string\n  }[] => {\n    const languageAlternatives = type.options?.languageAlternatives\n    if (!languageAlternatives) {\n      return SUPPORTED_LANGUAGES\n    }\n\n    if (!Array.isArray(languageAlternatives)) {\n      throw new Error(\n        `'options.languageAlternatives' should be an array, got ${typeof languageAlternatives}`\n      )\n    }\n\n    return languageAlternatives.reduce((acc: CodeInputLanguage[], {title, value: val, mode}) => {\n      const alias = LANGUAGE_ALIASES[val]\n      if (alias) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `'options.languageAlternatives' lists a language with value \"%s\", which is an alias of \"%s\" - please replace the value to read \"%s\"`,\n          val,\n          alias,\n          alias\n        )\n\n        return acc.concat({title, value: alias, mode: mode})\n      }\n\n      if (!mode && !SUPPORTED_LANGUAGES.find((lang) => lang.value === val)) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `'options.languageAlternatives' lists a language which is not supported: \"%s\", syntax highlighting will be disabled.`,\n          val\n        )\n      }\n\n      return acc.concat({title, value: val, mode})\n    }, [])\n  }, [type])\n\n  const handleCodeChange = useCallback(\n    (code: string) => {\n      const path = PATH_CODE\n      const fixedLanguage = type.options?.language\n\n      onChange([\n        setIfMissing({_type: type.name, language: fixedLanguage}),\n        code ? set(code, path) : unset(path),\n      ])\n    },\n    [onChange, type]\n  )\n\n  const languages = getLanguageAlternatives().slice()\n\n  const fixedLanguage = type.options?.language\n\n  const language = value?.language || fixedLanguage\n\n  // the language config from the schema\n  const configured = languages.find((entry) => entry.value === language)\n\n  // is the language officially supported (e.g. we import the mode by default)\n  const supported = language && isSupportedLanguage(language)\n\n  const mode = configured?.mode || (supported ? language : 'text')\n\n  const renderLanguageInput = useCallback(\n    (inputProps: Omit<InputProps, 'renderDefault'>) => {\n      return (\n        <Select\n          {...(inputProps as StringInputProps)}\n          onChange={(e) => {\n            const newValue = e.currentTarget.value\n            inputProps.onChange(newValue ? set(newValue) : unset())\n          }}\n        >\n          {languages.map((lang: {title: string; value: string}) => (\n            <option key={lang.value} value={lang.value}>\n              {lang.title}\n            </option>\n          ))}\n        </Select>\n      )\n    },\n    [languages]\n  )\n\n  const AceEditor = useAceEditor()\n\n  const renderCodeInput: RenderInputCallback = useCallback(\n    (inputProps) => {\n      return (\n        <EditorContainer radius={1} shadow={1} readOnly={readOnly}>\n          {AceEditor && (\n            <Suspense fallback={<div>Loading code editor...</div>}>\n              <AceEditor\n                ref={aceEditorRef}\n                mode={mode}\n                theme={theme}\n                width=\"100%\"\n                onChange={handleCodeChange}\n                name={inputProps.id}\n                value={inputProps.value as string}\n                markers={\n                  value && value.highlightedLines\n                    ? createHighlightMarkers(value.highlightedLines)\n                    : undefined\n                }\n                onLoad={handleEditorLoad}\n                readOnly={readOnly}\n                tabSize={2}\n                wrapEnabled\n                setOptions={ACE_SET_OPTIONS}\n                editorProps={ACE_EDITOR_PROPS}\n                onFocus={handleCodeFocus}\n                onBlur={elementProps.onBlur}\n              />\n            </Suspense>\n          )}\n        </EditorContainer>\n      )\n    },\n    [\n      AceEditor,\n      theme,\n      handleCodeChange,\n      handleCodeFocus,\n      handleEditorLoad,\n      mode,\n      elementProps.onBlur,\n      readOnly,\n      value,\n    ]\n  )\n\n  return (\n    <Stack space={4}>\n      {languageFieldMember && (\n        <MemberField\n          member={languageFieldMember}\n          renderItem={renderItem}\n          renderField={renderField}\n          renderInput={renderLanguageInput}\n          renderPreview={renderPreview}\n        />\n      )}\n\n      {type.options?.withFilename && filenameMember && (\n        <MemberField\n          member={filenameMember}\n          renderItem={renderItem}\n          renderField={renderField}\n          renderInput={renderInput}\n          renderPreview={renderPreview}\n        />\n      )}\n\n      {codeFieldMember && (\n        <MemberField\n          member={codeFieldMember}\n          renderInput={renderCodeInput}\n          renderItem={renderItem}\n          renderField={renderField}\n          renderPreview={renderPreview}\n        />\n      )}\n    </Stack>\n  )\n}\n","import React, {Suspense, useCallback, useEffect, useRef} from 'react'\nimport styled from 'styled-components'\nimport {Box} from '@sanity/ui'\nimport {ACE_EDITOR_PROPS, ACE_SET_OPTIONS} from './config'\nimport createHighlightMarkers from './createHighlightMarkers'\nimport {CodeInputValue} from './types'\nimport {useAceEditor} from './ace-editor/AceEditorLazy'\nimport {PreviewProps} from 'sanity'\n\nconst PreviewContainer = styled(Box)`\n  position: relative;\n`\n\nconst PreviewInner = styled(Box)`\n  background-color: #272822;\n\n  .ace_editor {\n    box-sizing: border-box;\n    cursor: default;\n    pointer-events: none;\n  }\n\n  .ace_content {\n    box-sizing: border-box;\n    overflow: hidden;\n  }\n`\n\n/**\n * @public\n */\nexport interface PreviewCodeProps extends PreviewProps {\n  selection?: CodeInputValue\n}\n\n/**\n * @public\n */\nexport default function PreviewCode(props: PreviewCodeProps) {\n  const aceEditorRef = useRef<any>()\n\n  useEffect(() => {\n    if (!aceEditorRef?.current) return\n\n    const editor = aceEditorRef.current?.editor\n\n    if (editor) {\n      // Avoid cursor and focus tracking by Ace\n      editor.renderer.$cursorLayer.element.style.opacity = 0\n      editor.textInput.getElement().disabled = true\n    }\n  }, [])\n\n  const handleEditorChange = useCallback(() => {\n    // do nothing when the editor changes\n  }, [])\n\n  const {selection, schemaType: type} = props\n  const fixedLanguage = type?.options?.language\n\n  const mode = selection?.language || fixedLanguage || 'text'\n\n  const AceEditor = useAceEditor()\n  return (\n    <PreviewContainer>\n      <PreviewInner padding={4}>\n        {AceEditor && (\n          <Suspense fallback={<div>Loading code preview...</div>}>\n            <AceEditor\n              ref={aceEditorRef}\n              focus={false}\n              mode={mode}\n              theme=\"monokai\"\n              width=\"100%\"\n              onChange={handleEditorChange}\n              maxLines={200}\n              readOnly\n              wrapEnabled\n              showPrintMargin={false}\n              highlightActiveLine={false}\n              cursorStart={-1}\n              value={selection?.code || ''}\n              markers={\n                selection?.highlightedLines\n                  ? createHighlightMarkers(selection.highlightedLines)\n                  : undefined\n              }\n              tabSize={2}\n              showGutter={false}\n              setOptions={ACE_SET_OPTIONS}\n              editorProps={ACE_EDITOR_PROPS}\n            />\n          </Suspense>\n        )}\n      </PreviewInner>\n    </PreviewContainer>\n  )\n}\n","import React from 'react'\n\nexport function getMedia(language?: string) {\n  if (language === 'jsx') {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\">\n        <g fill=\"#61DAFB\">\n          <circle cx=\"64\" cy=\"64\" r=\"11.4\" />\n          <path d=\"M107.3 45.2c-2.2-.8-4.5-1.6-6.9-2.3.6-2.4 1.1-4.8 1.5-7.1 2.1-13.2-.2-22.5-6.6-26.1-1.9-1.1-4-1.6-6.4-1.6-7 0-15.9 5.2-24.9 13.9-9-8.7-17.9-13.9-24.9-13.9-2.4 0-4.5.5-6.4 1.6-6.4 3.7-8.7 13-6.6 26.1.4 2.3.9 4.7 1.5 7.1-2.4.7-4.7 1.4-6.9 2.3C8.2 50 1.4 56.6 1.4 64s6.9 14 19.3 18.8c2.2.8 4.5 1.6 6.9 2.3-.6 2.4-1.1 4.8-1.5 7.1-2.1 13.2.2 22.5 6.6 26.1 1.9 1.1 4 1.6 6.4 1.6 7.1 0 16-5.2 24.9-13.9 9 8.7 17.9 13.9 24.9 13.9 2.4 0 4.5-.5 6.4-1.6 6.4-3.7 8.7-13 6.6-26.1-.4-2.3-.9-4.7-1.5-7.1 2.4-.7 4.7-1.4 6.9-2.3 12.5-4.8 19.3-11.4 19.3-18.8s-6.8-14-19.3-18.8zM92.5 14.7c4.1 2.4 5.5 9.8 3.8 20.3-.3 2.1-.8 4.3-1.4 6.6-5.2-1.2-10.7-2-16.5-2.5-3.4-4.8-6.9-9.1-10.4-13 7.4-7.3 14.9-12.3 21-12.3 1.3 0 2.5.3 3.5.9zM81.3 74c-1.8 3.2-3.9 6.4-6.1 9.6-3.7.3-7.4.4-11.2.4-3.9 0-7.6-.1-11.2-.4-2.2-3.2-4.2-6.4-6-9.6-1.9-3.3-3.7-6.7-5.3-10 1.6-3.3 3.4-6.7 5.3-10 1.8-3.2 3.9-6.4 6.1-9.6 3.7-.3 7.4-.4 11.2-.4 3.9 0 7.6.1 11.2.4 2.2 3.2 4.2 6.4 6 9.6 1.9 3.3 3.7 6.7 5.3 10-1.7 3.3-3.4 6.6-5.3 10zm8.3-3.3c1.5 3.5 2.7 6.9 3.8 10.3-3.4.8-7 1.4-10.8 1.9 1.2-1.9 2.5-3.9 3.6-6 1.2-2.1 2.3-4.2 3.4-6.2zM64 97.8c-2.4-2.6-4.7-5.4-6.9-8.3 2.3.1 4.6.2 6.9.2 2.3 0 4.6-.1 6.9-.2-2.2 2.9-4.5 5.7-6.9 8.3zm-18.6-15c-3.8-.5-7.4-1.1-10.8-1.9 1.1-3.3 2.3-6.8 3.8-10.3 1.1 2 2.2 4.1 3.4 6.1 1.2 2.2 2.4 4.1 3.6 6.1zm-7-25.5c-1.5-3.5-2.7-6.9-3.8-10.3 3.4-.8 7-1.4 10.8-1.9-1.2 1.9-2.5 3.9-3.6 6-1.2 2.1-2.3 4.2-3.4 6.2zM64 30.2c2.4 2.6 4.7 5.4 6.9 8.3-2.3-.1-4.6-.2-6.9-.2-2.3 0-4.6.1-6.9.2 2.2-2.9 4.5-5.7 6.9-8.3zm22.2 21l-3.6-6c3.8.5 7.4 1.1 10.8 1.9-1.1 3.3-2.3 6.8-3.8 10.3-1.1-2.1-2.2-4.2-3.4-6.2zM31.7 35c-1.7-10.5-.3-17.9 3.8-20.3 1-.6 2.2-.9 3.5-.9 6 0 13.5 4.9 21 12.3-3.5 3.8-7 8.2-10.4 13-5.8.5-11.3 1.4-16.5 2.5-.6-2.3-1-4.5-1.4-6.6zM7 64c0-4.7 5.7-9.7 15.7-13.4 2-.8 4.2-1.5 6.4-2.1 1.6 5 3.6 10.3 6 15.6-2.4 5.3-4.5 10.5-6 15.5C15.3 75.6 7 69.6 7 64zm28.5 49.3c-4.1-2.4-5.5-9.8-3.8-20.3.3-2.1.8-4.3 1.4-6.6 5.2 1.2 10.7 2 16.5 2.5 3.4 4.8 6.9 9.1 10.4 13-7.4 7.3-14.9 12.3-21 12.3-1.3 0-2.5-.3-3.5-.9zM96.3 93c1.7 10.5.3 17.9-3.8 20.3-1 .6-2.2.9-3.5.9-6 0-13.5-4.9-21-12.3 3.5-3.8 7-8.2 10.4-13 5.8-.5 11.3-1.4 16.5-2.5.6 2.3 1 4.5 1.4 6.6zm9-15.6c-2 .8-4.2 1.5-6.4 2.1-1.6-5-3.6-10.3-6-15.6 2.4-5.3 4.5-10.5 6-15.5 13.8 4 22.1 10 22.1 15.6 0 4.7-5.8 9.7-15.7 13.4z\" />\n        </g>\n      </svg>\n    )\n  }\n\n  if (language === 'javascript') {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\">\n        <path fill=\"#F0DB4F\" d=\"M1.408 1.408h125.184v125.185H1.408z\" />\n        <path\n          fill=\"#323330\"\n          d=\"M116.347 96.736c-.917-5.711-4.641-10.508-15.672-14.981-3.832-1.761-8.104-3.022-9.377-5.926-.452-1.69-.512-2.642-.226-3.665.821-3.32 4.784-4.355 7.925-3.403 2.023.678 3.938 2.237 5.093 4.724 5.402-3.498 5.391-3.475 9.163-5.879-1.381-2.141-2.118-3.129-3.022-4.045-3.249-3.629-7.676-5.498-14.756-5.355l-3.688.477c-3.534.893-6.902 2.748-8.877 5.235-5.926 6.724-4.236 18.492 2.975 23.335 7.104 5.332 17.54 6.545 18.873 11.531 1.297 6.104-4.486 8.08-10.234 7.378-4.236-.881-6.592-3.034-9.139-6.949-4.688 2.713-4.688 2.713-9.508 5.485 1.143 2.499 2.344 3.63 4.26 5.795 9.068 9.198 31.76 8.746 35.83-5.176.165-.478 1.261-3.666.38-8.581zM69.462 58.943H57.753l-.048 30.272c0 6.438.333 12.34-.714 14.149-1.713 3.558-6.152 3.117-8.175 2.427-2.059-1.012-3.106-2.451-4.319-4.485-.333-.584-.583-1.036-.667-1.071l-9.52 5.83c1.583 3.249 3.915 6.069 6.902 7.901 4.462 2.678 10.459 3.499 16.731 2.059 4.082-1.189 7.604-3.652 9.448-7.401 2.666-4.915 2.094-10.864 2.07-17.444.06-10.735.001-21.468.001-32.237z\"\n        />\n      </svg>\n    )\n  }\n\n  if (language === 'php') {\n    return (\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 800 400\">\n        <g transform=\"translate(-44.632 -141.55)\">\n          <g transform=\"matrix(8.3528 0 0 8.3119 -727.13 -3759.5)\">\n            <path d=\"m99.974 479.48h14.204c4.1693 0.0354 7.1903 1.2367 9.063 3.604 1.8726 2.3674 2.491 5.6004 1.855 9.699-0.24737 1.8727-0.79504 3.71-1.643 5.512-0.8127 1.802-1.9434 3.4273-3.392 4.876-1.7667 1.8373-3.657 3.0033-5.671 3.498-2.014 0.49467-4.0987 0.742-6.254 0.742h-6.36l-2.014 10.07h-7.367l7.579-38.001m6.201 6.042-3.18 15.9c0.21198 0.0353 0.42398 0.053 0.636 0.053h0.742c3.392 0.0353 6.2186-0.30033 8.48-1.007 2.2613-0.74199 3.7806-3.3213 4.558-7.738 0.63597-3.71-0.00003-5.8476-1.908-6.413-1.8727-0.56531-4.2224-0.83031-7.049-0.795-0.42402 0.0353-0.83035 0.053-1.219 0.053-0.35335 0.00002-0.72435 0.00002-1.113 0l0.053-0.053\" />\n            <path d=\"m133.49 469.36h7.314l-2.067 10.123h6.572c3.604 0.0707 6.2893 0.81269 8.056 2.226 1.802 1.4134 2.332 4.0987 1.59 8.056l-3.551 17.649h-7.42l3.392-16.854c0.35328-1.7666 0.2473-3.021-0.318-3.763-0.56536-0.74198-1.7844-1.113-3.657-1.113l-5.883-0.053-4.346 21.783h-7.314l7.632-38.054\" />\n            <path d=\"m162.81 479.48h14.204c4.1693 0.0354 7.1903 1.2367 9.063 3.604 1.8726 2.3674 2.491 5.6004 1.855 9.699-0.24737 1.8727-0.79503 3.71-1.643 5.512-0.8127 1.802-1.9434 3.4273-3.392 4.876-1.7667 1.8373-3.657 3.0033-5.671 3.498-2.014 0.49467-4.0987 0.742-6.254 0.742h-6.36l-2.014 10.07h-7.367l7.579-38.001m6.201 6.042-3.18 15.9c0.21199 0.0353 0.42399 0.053 0.636 0.053h0.742c3.392 0.0353 6.2186-0.30033 8.48-1.007 2.2613-0.74199 3.7806-3.3213 4.558-7.738 0.63597-3.71-0.00003-5.8476-1.908-6.413-1.8727-0.56531-4.2224-0.83031-7.049-0.795-0.42402 0.0353-0.83035 0.053-1.219 0.053-0.35335 0.00002-0.72435 0.00002-1.113 0l0.053-0.053\" />\n          </g>\n        </g>\n      </svg>\n    )\n  }\n\n  if (language === 'json') {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox=\"0 0 160 160\"\n      >\n        <defs>\n          <linearGradient id=\"a\">\n            <stop offset=\"0\" />\n            <stop offset=\"1\" stopColor=\"#fff\" />\n          </linearGradient>\n          <linearGradient\n            x1=\"-553.27\"\n            y1=\"525.908\"\n            x2=\"-666.116\"\n            y2=\"413.045\"\n            id=\"c\"\n            xlinkHref=\"#a\"\n            gradientUnits=\"userSpaceOnUse\"\n            gradientTransform=\"matrix(.99884 0 0 .9987 689.008 -388.844)\"\n          />\n          <linearGradient\n            x1=\"-666.117\"\n            y1=\"413.045\"\n            x2=\"-553.27\"\n            y2=\"525.908\"\n            id=\"b\"\n            xlinkHref=\"#a\"\n            gradientUnits=\"userSpaceOnUse\"\n            gradientTransform=\"matrix(.99884 0 0 .9987 689.008 -388.844)\"\n          />\n        </defs>\n        <path\n          d=\"M79.865 119.1c35.397 48.255 70.04-13.469 69.988-50.587-.06-43.886-44.54-68.414-70.017-68.414C38.943.1 0 33.895 0 80.135 0 131.531 44.64 160 79.836 160c-7.965-1.147-34.507-6.834-34.863-67.967-.24-41.346 13.487-57.865 34.805-50.599.477.177 23.514 9.265 23.514 38.95 0 29.56-23.427 38.716-23.427 38.716z\"\n          style={{marker: 'none'}}\n          color=\"#000\"\n          fill=\"url(#b)\"\n          fillRule=\"evenodd\"\n          overflow=\"visible\"\n        />\n        <path\n          d=\"M79.823 41.4C56.433 33.34 27.78 52.618 27.78 91.23c0 63.048 46.72 68.77 52.384 68.77C121.057 160 160 126.204 160 79.964 160 28.568 115.36.1 80.164.1c9.749-1.35 52.541 10.55 52.541 69.037 0 38.141-31.953 58.905-52.735 50.033-.478-.177-23.514-9.264-23.514-38.95 0-29.56 23.367-38.818 23.367-38.818z\"\n          style={{marker: 'none'}}\n          color=\"#000\"\n          fill=\"url(#c)\"\n          fillRule=\"evenodd\"\n          overflow=\"visible\"\n        />\n      </svg>\n    )\n  }\n\n  return undefined\n}\n"],"names":["highlightMarkersCSS","theme","createHighlightMarkers","startRow","startCol","endRow","endCol","className","type","inFront","SUPPORTED_LANGUAGES","title","value","include","regex","token","push","next","SUPPORTED_THEMES","DEFAULT_THEME","DEFAULT_DARK_THEME","ACE_SET_OPTIONS","useSoftTabs","navigateWithinSoftTabs","ACE_EDITOR_PROPS","$blockScrolling","defaultToken","useEffect","isSupportedLanguage","CodeInput","_a","members","readOnly","renderField","renderPreview","schemaType","onPathFocus","aceEditorRef","focus","_b","scheme","currentHighlightedLines","onChange","handleGutterMouseDown","target","editor","getLanguageAlternatives","Error","mode","val","acc","console","concat","path","setIfMissing","language","fixedLanguage","languages","inputProps","lang","AceEditor","radius","children","fallback","ref","width","markers","onLoad","tabSize","wrapEnabled","onFocus","space","member","renderInput","renderItem","styled","PreviewCode","handleEditorChange","selection","padding","maxLines","showPrintMargin","highlightActiveLine","editorProps","oop","acequire","TextHighlightRules","GroqHighlightRules","this","$rules","rules","normalizeRules","getMedia","exports","viewBox","_module","fill","Mode","cx","cy","FoldMode","r","highlighter","d","$tokenizer","Tokenizer","getRules","$keywordList","inherits","TextMode","lineCommentStart","jsxs","xmlns","prototype"],"mappings":"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"}